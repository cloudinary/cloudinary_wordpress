// On/Off toggle.

&-on-off {

	.description {
		margin: 0;
		font-size: $size-setting-field;
		color: inherit;
		font-weight: 600;

		&.left {
			margin-left: 0;
			margin-right: 0.4rem;
		}
	}

	input[type=checkbox] ~ .spinner {
		transition: right 0.2s;
		visibility: visible;
		margin: 2px;
		float: none;
		position: absolute;
		top: 0;
		right: 14px;
		background-size: 12px 12px;
		width: 12px;;
		height: 12px;
		opacity: 1;
	}

	input[type=checkbox]:checked ~ .spinner {
		right: 0;
	}

	$mini-control-width: 20px;
	$mini-control-height: 10px;
	$mini-slider-pad: 1px;
	$mini-slider-size: $mini-control-height - $mini-slider-pad - $mini-slider-pad;

	$large-control-width: 40px;
	$large-control-height: 20px;
	$large-slider-pad: 2px;
	$large-slider-size: $large-control-height - $large-slider-pad - $large-slider-pad;

	&-control {
		$control-width: 30px;
		$control-height: 16px;
		$slider-pad: 2px;
		$slider-size: $control-height - $slider-pad - $slider-pad;
		position: relative;
		display: inline-block;
		width: $control-width;
		height: $control-height;
		margin-right: 0.4rem;

		input, input:disabled {
			opacity: 0;
			width: 0;
			height: 0;
		}

		&-slider {

			position: absolute;
			cursor: pointer;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			background-color: $color-disabled-grey;
			transition: background-color 0.3s;
			border-radius: $large-control-height / 2;

			input:disabled + & {
				opacity: 0.4;
			}

			input:checked + & {
				background-color: $color-cld-blue !important;
			}

			input:checked.partial + & {
				background-color: $color-orange !important;
			}

			input:checked.delete + & {
				background-color: $color-red !important;
			}

			&::before {
				position: absolute;
				display: block;
				content: "";
				height: $slider-size;
				width: $slider-size;
				left: $slider-pad;
				bottom: $slider-pad;
				background-color: $color-white;
				transition: transform 0.2s;
				border-radius: 80%;

				input:checked + & {
					transform: translateX($control-width - $slider-size - $slider-pad * 2);
				}

				.mini input:checked + & {
					transform: translateX($mini-control-width - $mini-slider-size - $mini-slider-pad * 2);
				}

				.large input:checked + & {
					transform: translateX($large-control-width - $large-slider-size - $large-slider-pad * 2);
				}
			}
		}

		&.mini {
			width: $mini-control-width;
			height: $mini-control-height;
		}

		&.large {
			width: $large-control-width;
			height: $large-control-height;
		}
	}

	.large &-control {
		&-slider {

			&::before {
				height: $large-slider-size;
				width: $large-slider-size;
				left: $large-slider-pad;
				bottom: $large-slider-pad;

			}
		}
	}

	.large &-control {
		&-slider {

			&::before {
				height: $large-slider-size;
				width: $large-slider-size;
				left: $large-slider-pad;
				bottom: $large-slider-pad;

			}
		}
	}

	.inner-input{
		vertical-align: middle;
		border: 1px solid #dedede;
		margin-left: -24px;
		background-color: #dedede;
		border-radius: 9px;
		text-indent: $large-slider-size + 4px;
		height: $large-control-height;
	}

	.input-toggle{
		margin-bottom: 5px;
	}
}
